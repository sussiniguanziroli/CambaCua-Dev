// Variables asumidas (asegúrate que estén definidas)
$azul-cambacua: #0b369c;
$button-hover-cambacua: #1d5aea;
$main-white: #ffffff;
$text-gray: #555555;
$light-gray-bg: #f8f9fa;
$border-color: #e0e0e0;
$danger-color: #dc3545;
$heading-color: #333333;

.product-card {
    background-color: $main-white;
    border-radius: 10px; // Un poco más suave
    // Sombra más sutil y difusa
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.07);
    padding: 1rem; // Padding consistente (16px)
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    text-align: start;
    width: 100%; // Ocupa el ancho de la celda de la grilla
    box-sizing: border-box;
    height: 100%; // Que la altura la determine la grilla/contenido
    // min-height: 400px; // Eliminamos min-height fijo, mejor que la grilla controle
    opacity: 1;
    transition: transform 0.25s ease, box-shadow 0.25s ease, opacity 0.3s ease; // Transiciones suaves
    position: relative; // Para posibles elementos posicionados dentro
    border: 1px solid transparent; // Borde inicial transparente para evitar salto en hover

    &:hover {
        transform: translateY(-4px); // Efecto lift sutil
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1); // Sombra más pronunciada en hover
        // border-color: $border-color; // Opcional: borde sutil en hover
    }
}

// Estilo SweetAlert (si es necesario y no global)
.swal2-popup {
    font-family: 'Poppins', sans-serif;
    font-size: 1rem;
}

.image-container {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    // height: 230px; // Altura fija simplificada?
    aspect-ratio: 1 / 1; // Mejor: usar aspect-ratio (cuadrado)
    margin-bottom: 1rem; // Espacio debajo imagen
    border-radius: 8px; // Redondeo al contenedor por si la imagen no llena (con object-fit: contain)
    background-color: $light-gray-bg; // Fondo por si la imagen es transparente o no carga
}

.product-image {
    display: block; // Evita espacio extra
    width: 100%;
    height: 100%; // Ocupa el contenedor
    object-fit: contain; // Mantenemos contain por seguridad, 'cover' es opción
    // border-radius: 8px; // Redondeo ya aplicado al contenedor
    cursor: pointer;
}

.product-category {
    font-size: 0.8rem; // Más pequeño
    color: $text-gray;
    margin-bottom: 0.25rem; // Menos espacio
    text-transform: uppercase; // Opcional: estilo categoría
    font-weight: 500;
}

.product-name {
    font-size: 1rem; // Tamaño adecuado para tarjeta
    margin: 0 0 0.5rem 0; // Solo margen inferior
    font-weight: 600;
    color: $heading-color;
    line-height: 1.4; // Buen espaciado si el nombre ocupa 2 líneas
    cursor: pointer;
    transition: color 0.2s ease; // Transición solo para el color

    &:hover {
        color: $azul-cambacua;
    }
}

.product-price {
    font-size: 1.1rem; // Precio un poco más grande
    font-weight: 600; // Más peso al precio
    color: $heading-color; // O $azul-cambacua si quieres destacarlo más
    margin-bottom: 1rem; // Espacio antes del botón
}

// --- LIMPIEZA: Eliminados estilos de .quantity-control ---

.add-to-cart-button {
    background-color: $azul-cambacua;
    color: $main-white;
    border: none;
    border-radius: 6px; // Consistente con otros botones
    padding: 0.6rem 1rem; // Padding consistente
    font-size: 0.9rem; // Tamaño fuente consistente
    font-weight: 500;
    cursor: pointer;
    width: 100%;
    transition: background-color 0.2s ease, transform 0.1s ease;
    margin-top: auto; // Empuja el botón hacia abajo si hay espacio extra

    &:hover {
        background-color: $button-hover-cambacua; // Usar variable hover
    }
    &:active {
         transform: scale(0.98); // Efecto click
    }
    // Estilo para cuando está "En carrito" (si se aplica clase o se cambia texto)
    &.in-cart { // Asumiendo que añades esta clase en el JSX si existsInCart es true
        background-color: $success-color; // O un gris, o simplemente texto diferente
        &:hover { background-color: darken($success-color, 10%); }
    }
    // O simplemente deshabilítalo si está en carrito (más simple)
    // &:disabled { background-color: #bdc3c7; cursor: not-allowed; } -> Requiere añadir `disabled={existsInCart}` en JSX
}

// --- Media Queries (Solo para Márgenes/Ajustes Finos si son necesarios) ---
// Las columnas de la grilla se controlan en itemlist.scss
// Podríamos quitar los márgenes de aquí si el 'gap' de la grilla es suficiente
/*
@media (min-width: 768px) {
    .product-card {
        // margin: 8px; // Quitar si 'gap' en itemlist.scss es suficiente
    }
}

@media (min-width: 1024px) {
    .product-card {
        // margin: 12px; // Quitar si 'gap' en itemlist.scss es suficiente
        // width: 100%; // Dejar que la grilla controle el ancho
    }
}
*/


// Estilos para Productos Agotados
.out-of-stock {
    opacity: 0.7; // Un poco menos opaco que antes
    // pointer-events: none; // Opcional: deshabilitar todos los clicks en la tarjeta

    &:hover { // Anular efecto hover en tarjetas agotadas
         transform: none;
         box-shadow: 0 2px 10px rgba(0, 0, 0, 0.07);
    }

    .product-image {
        filter: grayscale(80%); // Un poco menos intenso que 100%
    }

    // --- LIMPIEZA: Eliminados estilos para .add-to-cart-button aquí ---

    .product-name,
    .product-category,
    .product-price {
        color: #999; // Gris más claro
    }

    .stock-status {
        background-color: $text-gray; // Fondo gris oscuro en lugar de rojo
        color: $main-white;
        margin-top: auto; // Empujar hacia abajo
        padding: 0.5rem 0.8rem; // Padding ajustado
        border-radius: 6px;
        font-size: 0.8rem; // Texto más pequeño
        font-weight: 500;
        text-transform: uppercase;
        text-align: center; // Centrar texto
    }
}